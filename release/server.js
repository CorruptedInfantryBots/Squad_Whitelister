const{match:match}=require("assert"),cp=require("child_process");var installingDependencies=!1;const irequire=async e=>{try{require.resolve(e)}catch(e){installingDependencies||(installingDependencies=!0,console.log("INSTALLING DEPENDENCIES...\nTHIS PROCESS MAY TAKE SOME TIME. PLEASE WAIT")),cp.execSync("npm install"),await setImmediate((()=>{})),console.log("DEPENDECIES INSTALLED")}console.log(`Requiring "${e}"`);try{return require(e)}catch(s){console.log(`Could not include "${e}". Restart the script`),restartProcess(0,1)}};async function init(){const e=(await irequire("./package.json")).version,s=await irequire("fs-extra"),t=await irequire("node-stream-zip"),o=await irequire("https"),n=await irequire("http"),i=await irequire("express"),r=i(),a=await irequire("path"),l=await irequire("mongodb"),c=l.MongoClient,d=l.ObjectID,u=await irequire("crypto"),p=await irequire("body-parser"),_=await irequire("cookie-parser"),g=await irequire("nocache"),m=await irequire("log4js"),f=await irequire("axios"),h=(await irequire("minimist"))(process.argv.slice(2)),y=await irequire("node-run-cmd"),w=await irequire("express-force-ssl"),S=await irequire("find-free-port"),{mainModule:v}=await irequire("process"),b=await irequire("discord.js"),{io:$}=await irequire("socket.io-client");try{(await irequire("dotenv")).config()}catch(e){console.error(e)}var k=0;const O=console.log,I=console.error;let D=new Date;const C=a.join(__dirname,"logs",D.toISOString().replace(/T/g,"_").replace(/(:|-|\.|Z)/g,"")+".log");s.existsSync("logs")||s.mkdirSync("logs"),s.existsSync(C)||s.writeFileSync(C,""),m.configure({appenders:{App:{type:"file",filename:C}},categories:{default:{appenders:["App"],level:"all"}}});const q=m.getLogger("App");console.log("Log-file:",C);var x,A={http:void 0,https:void 0,configs:{https:{port:void 0},http:{port:void 0}},logging:{requests:!1}},T={ws:null,initDone:!1},E=[];var j,P,F={discord_bot:!1,squadjs:!1},N={discord_bot:{invite_link:""},squadjs:{},database:{root_user_registered:!1},updater:{updating:!1}};function L(){function n(e,s,t){R((e=>{e.collection("whitelists").deleteOne({expiration:{$lte:new Date}},((e,s)=>{e&&console.error(e),t&&t()}))}))}function l(e,s){const t=e.originalUrl.replace(/\?.*$/,"");let o=[];for(let e of o)if(t.startsWith(e))return e;return t.endsWith("/")?t.substring(0,t.length-1):t}function c(e,s,t){S(e)?t():s.redirect("/")}function m(o=!1,n=null){let i=new Date;console.log("Current version: ",e,"\n > Checking for updates",i.toLocaleString()),f.get("https://api.github.com/repos/fantinodavide/Squad_Whitelister/releases").then((i=>{const r=i.data[0],l=r.tag_name.toUpperCase().replace("V","").split("."),c=e.toString().split("."),d=x.other.install_beta_versions&&r.prerelease||!r.prerelease,u=parseInt(c[0])<parseInt(l[0]),p=parseInt(c[0])<=parseInt(l[0])&&parseInt(c[1])<parseInt(l[1]),_=parseInt(c[0])<=parseInt(l[0])&&parseInt(c[1])<=parseInt(l[1])&&parseInt(c[2])<parseInt(l[2]);d&&(u||p||_)?(console.log(" > Update found: "+r.tag_name,r.name),o?function(e){const o=e.assets.filter((e=>"release.zip"==e.name))[0].browser_download_url;console.log(" > Downloading update: "+e.tag_name,e.name,o);const n=a.resolve(__dirname,"tmp_update"),i=a.resolve(n,"gitupd.zip");s.existsSync(n)||s.mkdirSync(n);const r=s.createWriteStream(i);f({method:"get",url:o,responseType:"stream"}).then((e=>{e.data.pipe(r)})),r.on("finish",(e=>{setTimeout((()=>{!function(e,o,n){const i=new t({file:o,storeEntries:!0,skipEntryNameValidation:!0});i.on("ready",(()=>{s.remove(__dirname+"/dist",(()=>{i.extract("release/",__dirname,((t,o)=>{i.close(),y.run("npm install"),console.log(" > Extracted",o,"files"),s.remove(e,(()=>{console.log(`${e} folder deleted`);const s=5e3;console.log(" > Restart in",s/1e3,"seconds"),restartProcess(s,0,h)}))}))}))}))}(n,i)}),1e3)})),r.on("error",(e=>{console.error(e)}))}(r):n&&n()):(console.log(" > No updates found"),n&&n())})).catch((e=>{console.error(" > Couldn't check for updates. Proceding startup",e),n&&n()}))}function S(e){return e.userSession&&e.userSession.access_level<=5}m(x.other.automatic_updates,(()=>{console.log(" > Starting up"),setInterval((()=>{m(x.other.automatic_updates)}),1e3*x.other.update_check_interval_seconds),function(){function e(){R((async e=>{const s=await e.collection("configs").findOne({category:"seeding_tracker"});if(!s)return;const t=s.config;t.next_reset&&new Date>new Date(t.next_reset)&&(e.collection("players").updateMany({},{$set:{seeding_points:0}}),e.collection("configs").updateOne({category:"seeding_tracker"},{$set:{"config.next_reset":new Date((new Date).valueOf()+t.reset_seeding_time.value*t.reset_seeding_time.option).toISOString().split("T")[0]}}))}))}e(),setInterval(e,20)}(),P((()=>{!function(e=null){let s=null;if(console.log("SquadJS WebSocket"),x.squadjs.websocket&&""!=x.squadjs.websocket.token&&""!=x.squadjs.websocket.host){const o=setTimeout((()=>{console.error(" > Connection timed out. Check your SquadJS WebSocket configuration."),console.log(" > Proceding without SquadJS WebSocket."),e&&e()}),1e4);let n=$(`ws://${x.squadjs.websocket.host}:${x.squadjs.websocket.port}`,{auth:{token:x.squadjs.websocket.token}});function t(){const e=1;let s=!0;function t(){s=!1,F.squadjs&&R((async e=>{const s=(await e.collection("configs").findOne({category:"seeding_tracker"})).config,t=s.reward_needed_time.value*(s.reward_needed_time.option/1e3/60);n.emit("rcon.getListPlayers",(o=>{if(o.length<=s.seeding_player_threshold)for(let i of o)e.collection("players").findOneAndUpdate({steamid64:i.steamID},{$set:{steamid64:i.steamID,username:i.name},$inc:{seeding_points:1}},{upsert:!0,returnNewDocument:!0},((e,o)=>{if(e)U(null,e);else if("true"==s.reward_enabled){const e=Math.min(Math.round(100*o.value.seeding_points/t),108);o.value&&o.value.seeding_points&&e%10==0&&e<100?n.emit("rcon.warn",i.steamID,`Seeding Reward: \n\n${e}% completed`,(e=>{})):100==e&&n.emit("rcon.warn",i.steamID,"Seeding\n\nYou have received the Seeding Reward!",(e=>{}))}}))}))}))}s&&t(),setInterval(t,60*e*1e3)}n.on("connect",(async()=>{clearTimeout(o),console.log(" > Connected"),clearInterval(s),F.squadjs=!0,T.initDone||(T.initDone=!0,t(),e())})),n.on("disconnect",(async()=>{F.squadjs=!1,console.log("SquadJS WebSocket\n > Disconnected\n > Trying to reconnect"),s=setInterval((()=>{F.squadjs||n.connect()}),1e4)})),n.on("PLAYER_CONNECTED",(async e=>{try{e&&e.player&&e.player.steamID&&(R((async s=>{s.collection("players").updateOne({steamid64:e.player.steamID},{$set:{username:e.player.name}},{upsert:!0})})),setTimeout((()=>{R((s=>{const t=[{$match:{steamid64:e.player.steamID}},{$lookup:{from:"groups",localField:"id_group",foreignField:"_id",as:"group_full_data"}}];s.collection("whitelists").aggregate(t).toArray((async(t,o)=>{t?U(null,t):s.collection("players").findOne({steamid64:e.player.steamID},(async(s,t)=>{if(s)U(null,s);else{let s="Welcome "+e.player.name+"\n\n";if(F.squadjs&&o[0]&&o[0].group_full_data[0]&&(s+="Group: "+o[0].group_full_data[0].group_name+"\nExpiration: "+(o[0].expiration?((o[0].expiration-new Date)/1e3/60/60).toFixed(1)+" h":"Never")+"\n"),F.discord_bot){let e="";if(t&&t.discord_user_id&&""!=t.discord_user_id){const s=await P.users.fetch(t.discord_user_id);e=s.username+"#"+s.discriminator}s+="Discord Username: "+(""!=e?e:"Not linked")}F.squadjs&&setTimeout((()=>{n.emit("rcon.warn",e.player.steamID,s,(e=>{}))}),5e3)}}))}))}))}),1e4))}catch(e){console.error("PLAYER_CONNECTED ERROR",e)}})),n.on("CHAT_MESSAGE",(async e=>{switch(e.message){case"test":break;case"playerinfo":console.log(e);break;default:6!=e.message.length||e.message.includes(" ")||R((async s=>{s.collection("profilesLinking").findOne({code:e.message},(async(t,o)=>{if(t)U(null,t);else if(o)if(o.expiration>new Date){const t=await P.users.fetch(o.discordUserId),i=t.username+"#"+t.discriminator;s.collection("players").updateOne({discord_user_id:o.discordUserId},{$set:{steamid64:e.player.steamID,username:e.player.name,discord_user_id:o.discordUserId}},{upsert:!0},((r,a)=>{s.collection("players").deleteOne({steamid64:e.player.steamID,discord_user_id:{$exists:!1}},((r,a)=>{if(r)return U(null,r);s.collection("profilesLinking").deleteOne({_id:o._id}),r?U(null,r):(n.emit("rcon.warn",e.steamID,"Linked Discord profile: "+i,(e=>{})),t.send({embeds:[(new b.EmbedBuilder).setColor(x.app_personalization.accent_color).setTitle("Profile Linked").setDescription("Your Discord profile has been linked to a Steam profile").addFields({name:"Steam Username",value:e.name,inline:!0},{name:"SteamID",value:b.hyperlink(e.steamID,"https://steamcommunity.com/profiles/"+e.steamID),inline:!0})]}))}))}))}else s.collection("profilesLinking").deleteOne({_id:o._id})}))}))}}))}else console.log(" > Not configured. Skipping."),e&&e()}((()=>{{const t=__dirname+"/ALTERNATIVE PORTS.txt";s.removeSync(t);const i=["certificates/certificate.crt","certificates/fullchain.pem","certificates/default.crt"];let a=H(["certificates/certificate.key","certificates/privkey.pem","certificates/default.key"]),l=H(i);function e(e,o){if(e!=o){const n="!!! WARNING !!! Port "+e+" is not available! Closest free port found: "+o+"\n";console.log(n),s.writeFileSync(t,n,{flag:"a+"})}}J(x.web_server.http_port,(t=>{J(x.web_server.https_port,(n=>{if(t?A.http=r.listen(t,x.web_server.bind_ip,(function(){var s=A.http.address().address;console.log("HTTP server listening at http://%s:%s",s,t),A.configs.http.port=t,e(x.web_server.http_port,t)})):console.error("Couldn't start HTTP server"),a&&l){console.log("Using Certificate:",l,a);const t={key:s.readFileSync(a),cert:s.readFileSync(l)};A.https=o.createServer(t,r),n?(r.set("forceSSLOptions",{httpsPort:n}),A.configs.https.port=n,A.https.listen(n),console.log("HTTPS server listening at https://%s:%s",x.web_server.bind_ip,n),e(x.web_server.https_port,n)):console.error("Couldn't start HTTPS server")}}))})),setInterval(n,6e4)}}))}))})),r.use(g()),r.set("etag",!1),r.use("/",p.json()),r.use("/",p.urlencoded({extended:!0})),r.use(_()),r.use((function(e,s,t){if(!x.web_server.force_https)return t();w(e,s,t)})),r.use("/",(function(e,s,t=null){const o=e.cookies;null!=o.stok&&""!=o.stok?R((n=>{n.collection("sessions").findOne({token:o.stok},{projection:{_id:0}},((o,i)=>{o?s.sendStatus(500):null!=i&&i.session_expiration>new Date?(e.userSession=i,n.collection("users").findOne({_id:i.id_user},{projection:{_id:0}},((o,n)=>{null!=n?(e.userSession={...e.userSession,...n},t&&t()):s.send({status:"login_required"}).status(401)}))):t&&t()}))})):t()})),r.use((function(e,s,t){const o=e.get("host");E[o]?E[o]++:E[o]=1;t()})),r.post("/api/changepassword",((e,s,t)=>{const o=e.body;R((t=>{const n=u.createHash("sha512").update(o.new_password).digest("hex"),i=u.createHash("sha512").update(o.old_password).digest("hex");t.collection("users").updateOne({_id:e.userSession.id_user,password:i},{$set:{password:n}},((e,t)=>{e?U(500,e):s.send(t)}))}))})),r.post("/api/login",((e,s,t)=>{const o=e.body;R((e=>{let t=u.createHash("sha512").update(o.password).digest("hex");e.collection("users").findOne({$or:[{username_lower:o.username.toLowerCase()},{username:o.username}],password:t},((e,t)=>{if(e)s.sendStatus(500),console.error(e);else if(null==t)s.sendStatus(401);else{const e=60*x.web_server.session_duration_hours*60*1e3;let o,n={login_date:new Date,session_expiration:new Date(Date.now()+e),id_user:t._id};do{o=!1,n.token=z(128),R((e=>{e.collection("sessions").findOne({token:n.token},((t,i)=>{t?(s.sendStatus(500),console.error(t)):null==i?e.collection("sessions").insertOne(n,((e,t)=>{e?(s.sendStatus(500),console.error(e)):(s.cookie("stok",n.token,{expires:n.session_expiration}),s.cookie("uid",n.id_user,{expires:n.session_expiration}),s.send({status:"login_ok",userDt:n}))})):o=!0}))}))}while(o)}}))}))})),r.post("/api/signup",((e,s,t)=>{const o=e.body;let n,i={username:o.username,username_lower:o.username.toLowerCase(),password:u.createHash("sha512").update(o.password).digest("hex"),access_level:N.database.root_user_registered?100:0,clan_code:o.clan_code,registration_date:new Date,discord_username:o.discord_username};0!=i.access_level||N.database.root_user_registered||(N.database.root_user_registered=!0);const r=60*x.web_server.session_duration_hours*60*1e3;let a={...i};a.login_date=new Date,a.session_expiration=new Date(Date.now()+r),R((e=>{e.collection("users").findOne({$or:[{username_lower:o.username.toLowerCase()},{username:o.username}]},((t,o)=>{t?(s.sendStatus(500),console.error(t)):null==o?e.collection("users").insertOne(i,((e,t)=>{e?(s.sendStatus(500),console.error(e)):(console.log("\n\n\n\n\ninserted id=>",t.insertedId,"=>",i,"\n\n\n\n\n\n"),n=!1,a.token=z(128),s.redirect(307,"/api/login"))})):s.sendStatus(401)}))}))})),r.use("/",(function(e,s,t){if(!A.logging.requests)return t();const o=Object.keys(e.query).length>0,n=o?e.query:e.body,i=l(e);console.log("\nREQ: "+i+"\nSESSION: ",e.userSession,"\nPARM "+(o?"GET":"POST")+": ",n),t()})),r.get("/api/getVersion",((s,t,o)=>{t.send(e)})),r.use("/",i.static(__dirname+"/dist")),r.use("/favicon",((e,s,t)=>{console.log("favicon requested"),e.redirect(307,x.app_personalization.logo_url)})),r.get("/api/getAppPersonalization",(function(e,s,t){s.send(x.app_personalization)})),r.get("/api/getTabs",((e,s,t)=>{const o=[N.database.root_user_registered?{}:{name:"Root User Registration",order:0,type:"tab",max_access_level:null},{name:"Clans",order:5,type:"tab",max_access_level:5},{name:"Whitelist",order:10,type:"tab",max_access_level:100},{name:"Groups",order:15,type:"tab",max_access_level:100},{name:"Approvals",order:25,type:"tab",max_access_level:30},{name:"Seeding",order:27,type:"tab",max_access_level:30},{name:"Users and Roles",order:30,type:"tab",max_access_level:5},{name:"Configuration",order:35,type:"tab",max_access_level:5}];let n;n=N.updater.updating?[{name:"Updating",order:0,type:"tab",max_access_level:null}]:o.filter((s=>null==s.max_access_level&&!e.userSession||e.userSession&&s.max_access_level&&e.userSession.access_level<=s.max_access_level)),s.send({tabs:n})})),r.get("/api/getContextMenu",((e,s,t)=>{let o=[{name:"",action:"",url:"",method:"",order:0}];S(e)&&(o=o.concat([])),s.send(o)})),r.get("/:basePath/:clan_code?",((e,s,t)=>{n(null,null,(()=>{R((o=>{o.collection("lists").findOne({output_path:e.params.basePath},((n,i)=>{if(n)U(s,n);else if(null!=i){s.type("text/plain");let t=e.params.clan_code?{clan_code:e.params.clan_code}:{},n="",r=[],a=[],l=[],c=[],d=[];const u=null!=e.query.usernamesOnly,p=z(6);o.collection("clans").find(t).toArray(((t,_)=>{for(let e of _)a[e._id.toString()]=e,l.push(e._id);o.collection("groups").find().sort({group_name:1}).toArray(((t,_)=>{for(let e of _)r[e._id.toString()]=e;r[p]={group_name:p,group_permissions:["reserve"]};const g=[{$match:{approved:!0,id_clan:{$in:l},id_list:i._id}},{$lookup:{from:"players",let:{steamid64:"$steamid64"},pipeline:[{$match:{$expr:{$eq:["$steamid64","$$steamid64"]},discord_user_id:{$exists:!0}}}],as:"serverPlayerData"}},{$sort:{id_clan:1,id_group:1,username_l:1}}];o.collection("whitelists").aggregate(g).toArray(((t,i)=>{if(t)U(s,t);else if(null!=i){for(let g of i){let m=(g.serverPlayerData&&g.serverPlayerData[0]?g.serverPlayerData[0].discord_username:null)||g.discord_username||"";""==m||m.startsWith("@")||(m="@"+m),d.push({username:g.username,steamid64:g.steamid64,groupId:g.id_group,clanTag:a[g.id_clan].tag,discordUsername:m})}const _=[{$match:{steamid64:{$ne:null},discord_roles_ids:{$exists:!0}}},{$lookup:{from:"lists",let:{pl_roles:"$discord_roles_ids"},pipeline:[{$match:{output_path:e.params.basePath}},{$addFields:{int_r:{$setIntersection:["$discord_roles","$$pl_roles"]}}},{$match:{int_r:{$ne:[]}}}],as:"lists"}},{$lookup:{from:"groups",let:{pl_roles:"$discord_roles_ids"},pipeline:[{$addFields:{int_r:{$setIntersection:["$discord_roles","$$pl_roles"]}}},{$match:{int_r:{$ne:[]}}}],as:"groups"}},{$project:{discord_roles_ids:0,"groups.discord_roles":0,"groups.intersection_roles":0,"groups.int_r":0,"groups.require_appr":0}},{$match:{lists:{$ne:[]}}}];function l(){!x.other.whitelist_developers||u||e.params.clan_code||d.push({username:"JetDave",steamid64:"76561198419229279",groupId:p,clanTag:"SQUAD Whitelister Developer",discordUsername:"@=BIA=JetDave#1001"}),function(){for(let e of d)e.groupId=`${e.groupId}`,n+=`Admin=${e.steamid64}:${r[e.groupId].group_name} // [${e.clanTag}] ${e.username} ${e.discordUsername}\n`,c.includes(e.groupId)||c.push(e.groupId);n="\n"+n;for(let e of c){const s=r[e];n=`Group=${s.group_name}:${s.group_permissions.join(",")}\n`+n}}(),s.send(n)}e.params.clan_code?l():o.collection("players").aggregate(_).toArray(((e,t)=>{if(e)s.sendStatus(500),console.error(e);else for(let e of t)if(u)n+=e.username+"\n";else for(let s of e.groups)d.push({username:e.username,steamid64:e.steamid64,groupId:s._id,clanTag:"Discord Role",discordUsername:null!=e.discord_username?e.discord_username:""});o.collection("configs").findOne({category:"seeding_tracker"},((e,t)=>{if(t&&t.config.reward_enabled&&"true"==t.config.reward_enabled){const e=t.config,n=e.reward_needed_time.value*e.reward_needed_time.option/1e3/60;o.collection("players").find({steamid64:{$ne:null},seeding_points:{$gte:n}}).toArray(((t,o)=>{t&&U(s,t);const n=o.map((s=>({username:s.username,steamid64:s.steamid64,groupId:e.reward_group_id,clanTag:"Seeder",discordUsername:null!=s.discord_username?s.discord_username:""})));d.push(...n),l()}))}else l()}))}))}else s.send("")}))}))}))}else t()}))}))}))})),r.get("/dsTest",((e,s,t)=>{s.type("text/plain");const o=[{$match:{steamid64:{$ne:null},discord_roles_ids:{$exists:!0}}},{$lookup:{from:"groups",let:{pl_roles:"$discord_roles_ids"},pipeline:[{$addFields:{int_r:{$setIntersection:["$discord_roles","$$pl_roles"]}}},{$match:{int_r:{$ne:[]}}}],as:"groups"}},{$project:{discord_roles_ids:0,"groups.discord_roles":0,"groups.intersection_roles":0,"groups.int_r":0,"groups.require_appr":0}}];R((e=>{e.collection("players").aggregate(o).toArray(((e,t)=>{if(e)s.sendStatus(500),console.error(e);else{let e="";for(let s of t)for(let t of s.groups)e+="Admin="+s.steamid64+":"+t.group_name+" // [Discord Role] "+s.username+(null!=s.discord_username?" "+s.discord_username:"")+"\n";s.send(e)}}))}))})),r.get("/api/checkSession",((e,s,t)=>{e.userSession?s.send({status:"session_valid",userSession:e.userSession}):s.send({status:"login_required"}).status(401)})),r.use("/",(function(e,s,t=null){Object.keys(e.query).length>0?e.query:e.body,l(e);e.userSession?t():s.send({status:"login_required"}).status(401)})),r.use("/api/restart",((e,s,t)=>{s.send({status:"restarting"}),restartProcess(0,0,h)})),r.use("/api/logout",((e,s,t)=>{s.clearCookie("stok"),s.clearCookie("uid"),R((t=>{t.collection("sessions").deleteOne({token:e.userSession.token},((e,t)=>{e?U(s,e):s.send({status:"logout_ok"})}))}))})),r.use("/api/users/*",((e,s,t)=>{e.userSession&&e.userSession.access_level<=5&&t()})),r.get("/api/users/read/getAll",((e,s,t)=>{e.query;R((t=>{const o=[{$match:{...e.userSession.access_level>=100?{clan_code:e.userSession.clan_code}:{}}},{$lookup:{from:"clans",localField:"clan_code",foreignField:"clan_code",as:"clan_data"}},{$sort:{username:1}}];t.collection("users").aggregate(o).toArray(((e,t)=>{e?(s.sendStatus(500),console.error(e)):s.send(t)}))}))})),r.post("/api/users/write/remove",((e,s,t)=>{const o=e.body,n=h.demo?{username:{$ne:"demoadmin"}}:{};R((e=>{e.collection("users").deleteOne({_id:d(o._id),...n,access_level:{$gt:1}},((e,t)=>{e?(s.sendStatus(500),console.error(e)):s.send(t)}))}))})),r.post("/api/users/write/updateAccessLevel",((e,s,t)=>{const o=e.body,n=h.demo?{username:{$ne:"demoadmin"}}:{};console.log("\nFilter\n",n),e.userSession.access_level<=parseInt(o.upd)&&R((e=>{e.collection("users").updateOne({_id:d(o._id),...n,access_level:{$gt:1}},{$set:{access_level:parseInt(o.upd)}},((e,t)=>{e?(s.sendStatus(500),console.error(e)):s.send(t)}))}))})),r.use("/api/roles/*",((e,s,t)=>{e.userSession&&e.userSession.access_level<=5&&t()})),r.get("/api/roles/read/getAll",((e,s,t)=>{s.send({0:{name:"Root",access_level:0},5:{name:"Admin",access_level:5},30:{name:"Approver",access_level:30},100:{name:"User",access_level:100}})})),r.use("/api/config/*",((e,s,t)=>{e.userSession&&e.userSession.access_level<=5&&t()})),r.get("/api/config/read/getFull",(async(e,s,t)=>{let o={...x};if(h.demo&&e.userSession.access_level>0&&(o.discord_bot.token="hidden"),process.env.HIDDEN_CONFIG_TABS)for(let e of process.env.HIDDEN_CONFIG_TABS.split(";"))try{delete o[e]}catch(e){}s.send(o)})),r.use("/api/config/write",((e,s,t)=>{h.demo&&0!=e.userSession.access_level?s.sendStatus(403):t()})),r.post("/api/config/write/update",(async(e,t,o)=>{const n=e.body;let i={};process.env.HIDDEN_CONFIG_TABS&&process.env.HIDDEN_CONFIG_TABS.split(";").includes(n.category)?i.status="config_rejected":(x[n.category]=n.config,s.writeFileSync("conf.json.bak",s.readFileSync("conf.json")),s.writeFileSync("conf.json",JSON.stringify(x,null,"\t")),i.status="config_updated"),i.action="reload",t.send(i),restartProcess(0,0,h)})),r.use("/api/dbconfig/*",((e,s,t)=>{e.userSession&&e.userSession.access_level<=5&&t()})),r.get("/api/dbconfig/read/getFull",(async(e,s,t)=>{e.body;R((e=>{e.collection("configs").find({config:{$exists:!0,$ne:null},category:{$exists:!0,$ne:null}}).toArray(((e,t)=>{e?U(s,e):t&&s.send(t)}))}))})),r.get("/api/dbconfig/read/:category",(async(e,s,t)=>{e.body;R((t=>{t.collection("configs").findOne({category:e.params.category},((e,t)=>{e?U(s,e):t&&s.send(t.config)}))}))})),r.use("/api/dbconfig/write",((e,s,t)=>{h.demo&&0!=e.userSession.access_level?s.sendStatus(403):t()})),r.post("/api/dbconfig/write/update",(async(e,s,t)=>{const o=e.body;R((e=>{e.collection("configs").updateOne({category:o.category},{$set:{config:o.config}},{upsert:!0},((e,t)=>{e?U(s,e):s.send({status:"config_updated",action:"reload"})}))}))})),r.use("/api/lists/read/*",((e,s,t)=>{e.userSession&&e.userSession.access_level<=100&&t()})),r.get("/api/lists/read/getAll",((e,s,t)=>{R((t=>{let o=e.userSession.access_level<100?{}:{hidden_managers:!1};t.collection("lists").find(o).toArray(((e,t)=>{e?U(s,e):s.send(t)}))}))})),r.use("/api/lists/write/*",((e,s,t)=>{e.userSession&&e.userSession.access_level<=10?t():s.sendStatus(401)})),r.use("/api/lists/write/checkPerm",(async(e,s,t)=>{s.send({status:"permission_granted"})})),r.post("/api/lists/write/addNewList",((e,s,t)=>{const o=e.body;R((e=>{const t={title:o.title,output_path:o.output_path,hidden_managers:o.hidden_managers,require_appr:o.require_appr,discord_roles:o.discord_roles};e.collection("lists").insertOne(t,((e,t)=>{e?U(s,e):s.send({status:"inserted_new_list",...t})}))}))})),r.post("/api/lists/write/deleteList",((e,s,t)=>{const o=e.body;R((e=>{e.collection("whitelists").deleteMany({id_list:d(o.sel_list_id)},((t,n)=>{t?U(s,t):e.collection("lists").deleteMany({_id:d(o.sel_list_id)},((e,t)=>{e?U(s,e):s.send({status:"removed_list",...t})}))}))}))})),r.post("/api/lists/write/editList",((e,s,t)=>{const o=e.body;R((e=>{const t={title:o.title,output_path:o.output_path,hidden_managers:o.hidden_managers,require_appr:o.require_appr,discord_roles:o.discord_roles};e.collection("lists").updateOne({_id:d(o.sel_list_id)},{$set:t},((e,t)=>{e?U(s,e):s.send({status:"edited_list",...t})}))}))})),r.use("/api/whitelist/read/*",((e,s,t)=>{e.userSession&&e.userSession.access_level<=100&&t()})),r.get("/api/whitelist/read/getAllClans",((e,s,t)=>{e.query;R((t=>{const o=[{$match:e.userSession.access_level>=100?{clan_code:e.userSession.clan_code}:{}},{$lookup:{from:"whitelists",localField:"_id",foreignField:"id_clan",as:"clan_whitelist"}},{$addFields:{player_count:{$size:"$clan_whitelist"}}},{$project:{clan_whitelist:0}},{$sort:{full_name:1}}];t.collection("clans").aggregate(o).toArray(((e,t)=>{e?(s.sendStatus(500),console.error(e)):s.send(t)}))}))})),r.get("/api/whitelist/read/getAll",((e,s,t)=>{const o=e.query;R((e=>{let t=o.sel_clan_id?{id_clan:d(o.sel_clan_id)}:{};const n=[{$match:{id_list:d(o.sel_list_id),...t}},{$lookup:{from:"groups",localField:"id_group",foreignField:"_id",as:"group_full_data"}},{$lookup:{from:"users",localField:"inserted_by",foreignField:"_id",as:"inserted_by"}},{$lookup:{from:"players",localField:"steamid64",foreignField:"steamid64",as:"serverData"}},{$sort:{id_clan:1,approved:-1,id_group:1,username:1}}];e.collection("whitelists").aggregate(n).toArray(((e,t)=>{e?(s.sendStatus(500),console.error(e)):s.send(t)}))}))})),r.get("/api/whitelist/read/getPendingApprovalClans",((e,s,t)=>{e.query;R((t=>{const o=[{$match:e.userSession.access_level>=100?{clan_code:e.userSession.clan_code}:{}},{$lookup:{from:"whitelists",let:{id_clan:"$_id"},pipeline:[{$match:{$expr:{$eq:["$id_clan","$$id_clan"]},approved:!1}}],as:"whitelists"}},{$sort:{whitelists_data:-1}},{$match:{whitelists:{$exists:!0,$ne:[]}}}];t.collection("clans").aggregate(o).toArray(((e,t)=>{e?(s.sendStatus(500),console.error(e)):(console.log(t),s.send(t))}))}))})),r.get("/api/whitelist/read/getPendingApproval",((e,s,t)=>{const o=e.query;R((e=>{const t=[{$lookup:{from:"whitelists",let:{id_list:"$_id"},pipeline:[{$match:{$expr:{$eq:["$id_list","$$id_list"]},approved:!1,id_clan:d(o.sel_clan_id)}},{$lookup:{from:"groups",localField:"id_group",foreignField:"_id",as:"group_full_data"}},{$lookup:{from:"users",localField:"inserted_by",foreignField:"_id",as:"inserted_by"}},{$sort:{id_clan:1,approved:-1,id_group:1,username:1}}],as:"wl_data"}},{$match:{wl_data:{$exists:!0,$ne:[]}}}];e.collection("lists").aggregate(t).toArray(((e,t)=>{e?(s.sendStatus(500),console.error(e)):(s.send(t),console.log("\n\n\n",t,"\n\n\n"))}))}))})),r.use("/api/whitelist/write/*",((e,s,t)=>{e.userSession&&e.userSession.access_level<30?t():R(((o,n)=>{let i=e.userSession.access_level>=100?{clan_code:e.userSession.clan_code,admins:e.userSession.id_user.toString()}:{};o.collection("clans").findOne(i,((o,n)=>{o?U(s,o):null!=n?(console.log("authorizing",e.userSession.username,"=>",n),t()):(console.log("blocking",n),s.sendStatus(401))}))}))})),r.use("/api/whitelist/write/checkPerm",(async(e,s,t)=>{s.send({status:"permission_granted"})})),r.post("/api/whitelist/write/addPlayer",((e,s,t)=>{const o=e.body;R((t=>{const n=[{$match:e.userSession.access_level>=100?{clan_code:e.userSession.clan_code,admins:e.userSession.id_user.toString()}:{_id:d(o.sel_clan_id)}},{$lookup:{from:"whitelists",localField:"_id",foreignField:"id_clan",as:"clan_whitelist"}},{$addFields:{player_count:{$size:"$clan_whitelist"}}},{$project:{clan_whitelist:0}}];t.collection("clans").aggregate(n).toArray(((n,i)=>{console.log("====>",i);let r=i[0];if(n)console.log("error",n);else if(null!=r)if(""==r.player_limit||r.player_count<parseInt(r.player_limit)||e.userSession.access_level<=5){let n={id_clan:r._id,username:o.username,username_l:o.username.toLowerCase(),steamid64:o.steamid64,id_group:d(o.group),discord_username:o.discordUsername.startsWith("@")||""==o.discordUsername?""+o.discordUsername:"@"+o.discordUsername,inserted_by:d(e.userSession.id_user),expiration:!(!o.durationHours||""==o.durationHours)&&new Date(Date.now()+60*parseFloat(o.durationHours)*60*1e3),insert_date:new Date,approved:!1,id_list:d(o.sel_list_id)};t.collection("lists").findOne({_id:n.id_list},((o,a)=>{o?U(s,o):e.userSession.access_level<100||!a.hidden_managers?t.collection("groups").findOne(n.id_group,((o,l)=>{o?console.log("error",o):null!=l?(n.approved=!(l.require_appr||r.confirmation_ovrd||a.require_appr)||e.userSession.access_level<=30,t.collection("whitelists").insertOne(n,((t,o)=>{if(t)console.log("ERR",t);else if(s.send({status:"inserted_new_player",player:{...n,inserted_by:[{username:e.userSession.username}]},...o}),F.discord_bot){let s,t=[];n.approved?s={}:(s=(new b.ActionRowBuilder).addComponents((new b.ButtonBuilder).setCustomId("approval:approve:"+n._id).setLabel("Approve").setStyle(b.ButtonStyle.Success),(new b.ButtonBuilder).setCustomId("approval:reject:"+n._id).setLabel("Reject").setStyle(b.ButtonStyle.Danger)),t.push(s));const o=[(new b.EmbedBuilder).setColor(x.app_personalization.accent_color).setTitle("Whitelist Update").addFields({name:"Username",value:n.username,inline:!0},{name:"SteamID",value:b.hyperlink(n.steamid64,"https://steamcommunity.com/profiles/"+n.steamid64),inline:!0},{name:"Clan",value:i[0].full_name},{name:"Group",value:l.group_name,inline:!0})];n.expiration&&o[0].addFields({name:"Expiration",value:b.time(n.expiration,"R"),inline:!0}),o[0].addFields({name:"Manager",value:e.userSession.username},{name:"List",value:a.title},{name:"Approval",value:n.approved?":white_check_mark: Approved":":hourglass: Pending",inline:!0}),P.channels.cache.get(x.discord_bot.whitelist_updates_channel_id).send({embeds:o,components:t})}}))):s.send({status:"not_inserted",reason:"could find corresponding id"})})):s.sendStatus(402)}))}else s.send({status:"not_inserted",reason:"Player limit reached"});else s.sendStatus(401)}))}))})),r.post("/api/whitelist/write/removePlayer",((e,s,t)=>{const o=e.body;R((e=>{e.collection("whitelists").deleteOne({_id:d(o._id)},((e,t)=>{e?U(s,e):s.send({status:"removing_ok",...t})}))}))})),r.post("/api/whitelist/write/clearList",((e,s,t)=>{const o=e.body;R((e=>{e.collection("whitelists").deleteMany({id_clan:d(o.sel_clan_id),id_list:d(o.sel_list_id)},((e,t)=>{e?U(s,e):s.send({status:"clearing_ok",...t})}))}))})),r.use("/api/seeding/read/*",((e,s,t)=>{e.userSession&&e.userSession.access_level<30?t():s.sendStatus(401)})),r.get("/api/seeding/read/getPlayers",((e,s,t)=>{R((e=>{e.collection("players").find({seeding_points:{$gte:1},username:{$ne:null}}).toArray(((e,t)=>{e?U(s,e):s.send(t)}))}))})),r.use("/api/approval/write/*",((e,s,t)=>{e.userSession&&e.userSession.access_level<30?t():s.sendStatus(401)})),r.use("/api/approval/write/setApprovedStatus",((e,s,t)=>{M(e.body,s)})),r.use("/api/gameGroups/write/*",((e,s,t)=>{e.userSession&&e.userSession.access_level<10?t():s.sendStatus(401)})),r.use("/api/gameGroups/write/checkPerm",(async(e,s,t)=>{s.send({status:"permission_granted"})})),r.post("/api/gameGroups/write/newGroup",((e,s,t)=>{const o=e.body;R((e=>{e.collection("groups").insertOne(o,((e,t)=>{e?U(s,e):s.send({status:"group_created",data:o,dbRes:{...t}})}))}))})),r.post("/api/gameGroups/write/editGroup",((e,s,t)=>{let o={...e.body};delete o._id,R((t=>{t.collection("groups").updateOne({_id:d(e.body._id)},{$set:o},((o,n)=>{o?U(s,o):t.collection("groups").findOne({_id:d(e.body._id)},((e,t)=>{s.send({status:"edit_ok",...t})}))}))}))})),r.post("/api/gameGroups/write/remove",((e,s,t)=>{R((t=>{t.collection("groups").deleteOne({_id:d(e.body._id)},((e,t)=>{e?U(s,e):s.send({status:"removing_ok",...t})}))}))})),r.get("/api/gameGroups/read/getAllGroups",((e,s,t)=>{R((t=>{let o={};function n(){t.collection("groups").find(o).sort({group_name:1}).toArray(((e,t)=>{e?U(s,e):s.send(t)}))}e.userSession&&e.userSession.access_level>=100?t.collection("clans").findOne({clan_code:e.userSession.clan_code},((e,t)=>{if(e)U(s,e);else{let e=[];if(t)for(let s of t.available_groups)e.push(d(s));o={_id:{$in:e}},n()}})):n()}))})),r.use("/api/discord/*",((...e)=>{W(30,...e)})),r.use("/api/discord/write",((...e)=>{W(10,...e)})),r.get("/api/discord/read/getStatus",((e,s,t)=>{s.send(F.discord_bot)})),r.get("/api/discord/read/getRoles",((e,s,t)=>{e.query;if(F.discord_bot){const e=P.guilds.cache.find((e=>e.id==x.discord_bot.server_id));let t=[];for(let s of e.roles.cache)"@everyone"!==s[1].name.toLowerCase()&&t.push({id:s[1].id,name:s[1].name});s.send(t)}else s.sendStatus(404)})),r.get("/api/discord/read/getServers",((e,s,t)=>{e.query;if(F.discord_bot){let e=[];for(let s of P.guilds.cache)e.push({id:s[1].id,name:s[1].name});s.send(e)}else s.sendStatus(404)})),r.get("/api/discord/read/getChannels",(async(e,s,t)=>{e.query;if(F.discord_bot){s.send((await P.guilds.fetch(x.discord_bot.server_id)).channels.cache.sort(((e,s)=>e.rawPosition-s.rawPosition)).filter((e=>4!=e.type)))}else s.sendStatus(404)})),r.get("/api/discord/read/inviteLink",(async(e,s,t)=>{s.send({url:N.discord_bot.invite_link})})),r.use("/api/clans*",((e,s,t)=>{e.userSession&&e.userSession.access_level<10&&t()})),r.get("/api/clans/getAllClans",((e,s,t)=>{R((e=>{e.collection("clans").find().sort({full_name:1,tag:1}).toArray(((e,t)=>{s.send(t)}))}))})),r.post("/api/clans/removeClan",((e,s,t)=>{R((t=>{t.collection("clans").deleteOne({_id:d(e.body._id)},((e,t)=>{e?U(s,e):s.send({status:"removing_ok",...t})}))}))})),r.post("/api/clans/editClan",((e,s,t)=>{let o={...e.body};delete o._id,R((t=>{t.collection("clans").updateOne({_id:d(e.body._id)},{$set:o},((o,n)=>{o?U(s,o):t.collection("clans").findOne({_id:d(e.body._id)},((e,t)=>{s.send({status:"edit_ok",...t})}))}))}))})),r.get("/api/clans/getClanUsers",((e,s,t)=>{const o=e.query;R((e=>{e.collection("users").find({clan_code:o.clan_code}).toArray(((e,t)=>{s.send(t)}))}))})),r.get("/api/clans/getClanAdmins",((e,s,t)=>{const o=e.query;R((e=>{e.collection("clans").findOne({_id:d(o._id)},{projection:{admins:1}},((e,t)=>{if(e)U(s,e);else{let e=t.admins?t.admins:[];s.send(e)}}))}))})),r.post("/api/clans/editClanAdmins",((e,s,t)=>{const o=e.body;R((t=>{t.collection("clans").updateOne({_id:d(e.body._id)},{$set:{admins:o.clan_admins}},((e,t)=>{s.send({status:"edit_ok",...t})}))}))})),r.post("/api/clans/newClan",((e,s,t)=>{const o=e.body;let n;do{let e=z(8);n=!1,R((t=>{t.collection("clans").findOne({full_name_lower:o.full_name.toLowerCase()},((i,r)=>{let a={...o,clan_code:e};a.full_name_lower=o.full_name.toLowerCase(),i?(s.sendStatus(500),console.error(i)):null==r?t.collection("clans").findOne({clan_code:e},((e,o)=>{e?(s.sendStatus(500),console.error(e)):null==o?t.collection("clans").insertOne(a,((e,t)=>{e?(s.sendStatus(500),console.error(e)):(s.send({status:"clan_created",clan_data:a}),console.log("New clan created:",a))})):n=!0})):(s.send({status:"clan_already_registered"}).status(409),console.log("Trying to register an already registered clan:",a))}))}))}while(n)})),r.use("/admin*",c),r.use("/admin",(function(e,s,t){i.static("admin")(e,s,t)})),r.use("/api/admin*",c),r.get("/api/admin",((e,s,t)=>{s.send({status:"Ok"})})),r.get("/api/admin/getConfig",((e,s,t)=>{s.send(x)})),r.get("/api/admin/checkInstallUpdate",((e,s,t)=>{s.send({status:"Ok"}),m(!0)})),r.get("/api/admin/restartApplication",((e,s,t)=>{s.send({status:"Ok"}),restartProcess(e.query.delay?e.query.delay:0,0,h)})),r.use(((e,s,t)=>{s.redirect("/")}))}function P(e=null){if(console.log("Discord BOT"),x.discord_bot&&""!=x.discord_bot.token){const t=new b.Client({intents:[b.GatewayIntentBits.Guilds,b.GatewayIntentBits.GuildMessages,b.GatewayIntentBits.GuildMembers]});t.login(x.discord_bot.token);const o=setTimeout((()=>{console.error(" > Connection timed out. Check your discord_bot configuration."),console.log(" > Proceding without discord bot."),e()}),1e4),n=[{name:"ping",description:"Replies with Pong!"},{name:"listclans",description:"Gives a full list of clans with corresponding info"},{name:"profile",description:"Links the Discord profile to the Steam profile",options:[{name:"user",description:"Leave empty to get info of yourself, or fill to get info of a specific user",type:6,required:!1}]}];async function s(e){try{const s=await t.guilds.cache.get(x.discord_bot.server_id).members.cache.find((s=>s.id==e));if(s){const t=s.user,o=s._roles;R((s=>{s.collection("players").updateOne({discord_user_id:e},{$set:{discord_user_id:e,discord_username:t.username+"#"+t.discriminator,discord_roles_ids:o}},{upsert:!0})}))}}catch(e){console.error(e)}}t.on("ready",(async()=>{clearTimeout(o),F.discord_bot=!0,P=new Proxy(t,{});N.discord_bot.invite_link=`https://discord.com/api/oauth2/authorize?client_id=${t.user.id}&permissions=268564544&scope=bot%20applications.commands`,console.log(" > Logged-in!"),console.log(`  > Tag: ${t.user.tag}`),console.log(`  > ID: ${t.user.id}`),console.log(`  > Invite: ${N.discord_bot.invite_link}`),e();new b.REST({version:"10"}).setToken(x.discord_bot.token).put(b.Routes.applicationCommands(t.user.id),{body:n});let i=[];if(t.guilds)for(let e of t.guilds.cache)i.push({id:e[1].id,name:e[1].name});function r(){R((e=>{e.collection("players").find({discord_user_id:{$exists:!0}}).toArray(((e,t)=>{for(let e of t)s(e.discord_user_id)}))}))}""==x.discord_bot.server_id&&i.length>0&&(x.discord_bot.server_id=i[0].id),r(),setInterval(r,3e5)})),t.on("raw",(e=>{if("GUILD_MEMBER_UPDATE"===e.t){const s=e.d.user.id;let t=e.d.roles;R((o=>{o.collection("players").updateOne({discord_user_id:s},{$set:{discord_user_id:s,discord_username:e.d.user.username+"#"+e.d.user.discriminator,discord_roles_ids:t}},{upsert:!0})}))}})),t.on("interactionCreate",(async e=>{const o=e.member?e.member.user:e.user,n=`${o.id}`;if(e.isChatInputCommand()){switch(e.commandName){case"ping":await e.reply("Pong!");break;case"listclans":R((s=>{s.collection("lists").find().toArray(((o,n)=>{s.collection("clans").aggregate([{$lookup:{from:"whitelists",localField:"_id",foreignField:"id_clan",as:"clan_whitelist"}},{$addFields:{uniqueSteamids:{$setUnion:"$clan_whitelist.steamid64"}}},{$addFields:{unique_players:{$size:"$uniqueSteamids"}}},{$project:{_id:0,admins:0,available_groups:0,clan_whitelist:0,uniqueSteamids:0}}]).toArray(((s,o)=>{s&&console.error(s);let i=[],r=!0;for(let s of o){let o=[];for(let e of["tag","clan_code","player_limit","unique_players"])"player_limit"==e&&""==s[e]&&(s[e]="ထ"),o.push({name:B(e.replace(/\_/g," ")),value:s[e].toString(),inline:"full_name"!=e});const a=E.sort(),l=Object.keys(a)[0];if(a[l]){let e=[];for(let t of n){const o="https://"+l+":"+A.configs.https.port+"/"+t.output_path+"/"+s.clan_code;e.push(b.hyperlink(t.title,o))}o.push({name:"Whitelist",value:e.join(" - "),inline:!1})}i.push((new b.EmbedBuilder).setColor(x.app_personalization.accent_color).setTitle(B(s.full_name.replace(/\_/g," "))).addFields(...o)),i.length%10==0&&(r?(r=!1,e.reply({embeds:i})):t.channels.cache.get(e.channelId).send({embeds:i}),i=[])}i.length>0&&t.channels.cache.get(e.channelId).send({embeds:i})}))}))}));break;case"profile":R((s=>{let t=null!=e.options.getUser("user"),i=t?e.options.getUser("user"):o;s.collection("players").findOne({discord_user_id:t?i.id:n},(async(s,o)=>{if(s)U(null,s);else{console.log(o);let s=[{name:"Steam "+(o&&o.steamid64?"Username ":""),value:o&&o.steamid64?o.username:"*Not linked*",inline:!0}];o&&o.steamid64&&s.push({name:"SteamID",value:b.hyperlink(o.steamid64,"https://steamcommunity.com/profiles/"+o.steamid64),inline:!0});let n=await e.reply({content:b.userMention(i.id),embeds:[(new b.EmbedBuilder).setColor(x.app_personalization.accent_color).setAuthor({name:i.username,iconURL:i.avatarURL()}).setTitle("Linked Profiles").addFields(...s)],components:[(new b.ActionRowBuilder).addComponents(o&&o.steamid64?(new b.ButtonBuilder).setCustomId("profilelink:steam:unlink").setLabel("Unlink Steam").setStyle(b.ButtonStyle.Danger):(new b.ButtonBuilder).setCustomId("profilelink:steam:link").setLabel("Link Steam").setStyle(b.ButtonStyle.Success))],ephemeral:!t});n.interaction.ephemeral||setTimeout((async()=>{(await n.interaction.webhook.fetchMessage()).edit({components:[]})}),3e4)}}))}))}s(n)}else if(e.isButton()){const s=e.customId.split(":");switch(console.log(s),s[0]){case"approval":const t="approve"==s[1];M({_id:s[2],approve_update:t}),e.reply({content:"Done",ephemeral:!0}),e.message.edit({components:[]});let i=e.message.embeds[0];i.fields.filter((e=>"Approval"==e.name))[0].value=t?":white_check_mark: Approved":":x: Rejected",i.fields.push({name:(t?"Approved":"Rejected")+" by",value:b.userMention(o.id),inline:!0}),e.message.edit({embeds:[i]});break;case"profilelink":if(console.log(e.message.mentions.users,n,e.message.mentions.users.find((e=>e.id==n))),e.message.mentions.users.find((e=>e.id==n))||e.message.ephemeral){if("steam"===s[1])switch(s[2]){case"link":let t;do{let s=z(6);t=!1;const o=3e5,i=new Date(Date.now()+o);R((r=>{r.collection("profilesLinking").deleteOne({discordUserId:n},((a,l)=>{r.collection("profilesLinking").findOne({code:s},((a,l)=>{a?(res.sendStatus(500),console.error(a)):null==l?r.collection("profilesLinking").insertOne({source:"Discord",discordUserId:n,code:s,expiration:i},((t,n)=>{t?(res.sendStatus(500),console.error(t)):(e.reply({embeds:[(new b.EmbedBuilder).setColor(x.app_personalization.accent_color).setTitle("Link Steam Profile").setDescription("Join our Squad server and send in any chat the following code").addFields({name:"Linking Code",value:s,inline:!1},{name:"Expiration",value:b.time(i,"R"),inline:!1})],ephemeral:!0}),setInterval((async()=>{r.collection("profilesLinking").deleteOne({_id:n.insertedId})}),o))})):t=!0}))}))}))}while(t);break;case"unlink":if(s[3]){if("confirm"===s[3])R((s=>{s.collection("players").updateOne({discord_user_id:n},{$unset:{discord_user_id:1}},((s,t)=>{s?U(null,s):(console.log(t),1==t.modifiedCount?e.reply({content:"Your Steam account has been unlinked",ephemeral:!0}):e.reply({content:"You don't have a Steam account to unlink",ephemeral:!0}))}))}))}else await e.reply({embeds:[(new b.EmbedBuilder).setColor(x.app_personalization.accent_color).setTitle("Unlink Steam").setDescription("Do you really want to unlink your steam profile?")],components:[(new b.ActionRowBuilder).addComponents((new b.ButtonBuilder).setCustomId("profilelink:steam:unlink:confirm").setLabel("Confirm").setStyle(b.ButtonStyle.Danger))],ephemeral:!0})}}else e.reply({embeds:[(new b.EmbedBuilder).setColor(x.app_personalization.accent_color).setTitle("Unauthorized").setDescription("Only the owner of the profile can use this action")],ephemeral:!0})}}else e.isModalSubmit()&&e.reply({content:"Modal received",ephemeral:!0})}))}else console.log(" > Not configured. Skipping."),e()}function R(e,s=!1){if(s){let s,t;process.env.MONGODB_CONNECTION_STRING?s=process.env.MONGODB_CONNECTION_STRING:(s=x.database.mongo.host.includes("://")?x.database.mongo.host:"mongodb://"+x.database.mongo.host+":"+x.database.mongo.port,t=x.database.mongo.database);c.connect(s,(function(s,o){s&&console.error(s);var n=t?o.db(t):o.db();e(n)}))}else e(j)}function U(e,s){e&&e.sendStatus(500),console.error(s)}function B(e){return e.charAt(0).toUpperCase()+e.slice(1)}function G(e,s){for(let t in s){const o=Object.prototype.toString.call(s[t]),n=Object.prototype.toString.call(s);if(null==e[t]||e[t]&&"[object Array]"==n&&!e[t].includes(s[t]))switch(o){case"[object Object]":e[t]={};break;case"[object Array]":e[t]=[];break;default:"[object Array]"==n?e.push(s[t]):e[t]=s[t]}"object"==typeof s[t]&&G(e[t],s[t])}}function M(e,s=null){R((t=>{!e.approve_update||1!=e.approve_update&&"true"!=e.approve_update?t.collection("whitelists").deleteOne({_id:d(e._id)},((e,t)=>{e?U(s,e):s&&s.send({status:"rejected",...t})})):t.collection("whitelists").updateOne({_id:d(e._id)},{$set:{approved:!0}},((e,t)=>{e?U(s,e):s&&s.send({status:"approved",...t})}))}))}function z(e=64){const s=u.randomBytes(e).toString("base64").slice(0,e);return s.match(/^[a-zA-Z\d]{1,}$/)?s:z(e)}function W(e,s,t,o){s.userSession&&s.userSession.access_level<=e?o():t.sendStatus(401)}function H(e,t=0){if(t>=e.length)return null;return s.existsSync(e[t])?e[t]:H(e,++t)}function J(e,s=(()=>{}),t=15){console.log("Looking for free port close to "+e);try{S(e,(async function r(a,l){i.push(l);let c=l,d=n.createServer(),u=!1;await d.listen(c).on("error",(s=>{console.error(" > Failed",s.port),u=!0;let n=(443==e?4443:8080)+100*o;if(++o<t)try{S(n,r)}catch(e){}else console.error(" > Couldn't find a free port.\n > Terminating process..."),process.exit(1)})),d.close(),u||(console.log(" > Found free port: "+c),s(c))}))}catch(e){}let o=0,i=[]}!function(e){console.log("Current dir: ",__dirname);let t={web_server:{bind_ip:"0.0.0.0",http_port:80,https_port:443,force_https:!1,session_duration_hours:168},database:{mongo:{host:process.env.MONGODB_CONNECTION_STRING||"127.0.0.1",port:27017,database:"Whitelister"}},app_personalization:{name:"Whitelister",favicon:"",accent_color:"#ffc40b",logo_url:"https://joinsquad.com/wp-content/themes/squad/img/logo.png",logo_border_radius:"10",title_hidden_in_header:!1},discord_bot:{token:"",whitelist_updates_channel_id:""},squadjs:{websocket:{host:"",port:3e3,token:""}},other:{automatic_updates:!0,update_check_interval_seconds:3600,whitelist_developers:!0,install_beta_versions:!1,logs_max_file_count:10}};if(s.existsSync("conf.json")){var o={...JSON.parse(s.readFileSync("conf.json","utf-8").toString())};G(o,t),s.writeFileSync("conf.json",JSON.stringify(o,null,"\t")),e()}else J(t.web_server.http_port,(function(o){t.web_server.http_port=o,J(t.web_server.https_port,(function(o){t.web_server.https_port=o,console.log('Configuration file created, set your parameters and run again "node server".\nTerminating execution...'),s.writeFileSync("conf.json",JSON.stringify(t,null,"\t")),process.env.PROCESS_MANAGER_TYPE&&"DOCKER"==process.env.PROCESS_MANAGER_TYPE.toUpperCase()?e():process.exit(0)}))}))}((()=>{console.log=(...e)=>{O(...e),q.trace(...e)},console.error=(...e)=>{I(...e),q.error(...e)},s.readdir(a.join(__dirname,"logs"),{withFileTypes:!0},((e,t)=>{(x&&x.other&&t.length>x.other.logs_max_file_count||t.length>10)&&(t=t.slice(0,t.length-x.other.logs_max_file_count)).forEach((e=>{s.remove(a.join(__dirname,"logs",e.name))}))})),console.log("ARGS:",h),console.log("ENV:",process.env),s.watchFile("conf.json",((e,t)=>{console.log("Reloading configuration");let o,n=!1;try{o=JSON.parse(s.readFileSync("conf.json","utf-8").toString())}catch(e){console.log("Error found in conf.json file. Couldn't reload configuration."),n=!0}n||(x=o,console.log("Reloaded configuration.",x))})),x=JSON.parse(s.readFileSync("conf.json","utf-8").toString()),console.log(x),function(e=null){{console.log("MongoDB connection");const s=setTimeout((()=>{console.error(" > Connection failed. Check your Database configuration."),restartProcess(0,1,h)}),1e4);R((t=>{j=t,console.log(" > Successfully connected"),clearTimeout(s),e&&e()}),!0)}}((()=>{!function(e){const s={title:"Main",output_path:"wl",hidden_managers:!1,require_appr:!1,discord_roles:[]};R((t=>{function o(e){t.listCollections({name:"lists"}).next(((o,n)=>{null==n?t.collection("lists").insertOne(s,((s,o)=>{s?U(res,s):(console.log("Collection 'lists' created.\n",o),t.collection("whitelists").updateMany({id_list:{$exists:!1}},{$set:{id_list:o.insertedId}},((s,t)=>{s?U(res,s):(console.log("Updated references"),e())})))})):e()}))}async function n(e){let o=!1;const n=Object.keys(s);function i(r){const a=n[r];t.collection("lists").updateMany({[a]:{$exists:!1}},{$set:{[a]:s[a]}},(async(s,t)=>{s?console.error(s):(t.modifiedCount>0&&(o||(o=!0,console.log("Repairing Lists format"))),r<n.length-1?i(r+1):e())}))}i(0)}t.collection("users").findOne({access_level:0},((s,t)=>{s?U(null,s):null!=t?(N.database.root_user_registered=!0,o((()=>{n(e)}))):(N.database.root_user_registered=!1,o((()=>{n(e)})))})),h.demo&&t.collection("users").updateOne({username:"demoadmin"},{$set:{password:u.createHash("sha512").update("demo").digest("hex"),access_level:5}},{upsert:!0}),t.collection("players").deleteMany({discord_user_id:{$exists:!0},steamid64:{$exists:!1}})}))}(L)}))})),process.on("uncaughtException",(function(e){console.error("Uncaught Exception",e.message,e.stack),++k>=(h["self-pm"]?5:0)&&(console.error("Too many errors occurred during the current run. Terminating execution..."),restartProcess(0,1,h))}))}function restartProcess(e=5e3,s=0,t=null,o=!1){t&&t["self-pm"]&&1==t["self-pm"]||o?(process.on("exit",(function(){console.log("Process terminated\nStarting new process"),require("child_process").spawn(process.argv.shift(),process.argv,{cwd:process.cwd(),detached:!0,stdio:"inherit"})})),setTimeout((()=>{process.exit(s)}),e)):(console.log("Terminating execution. Process manager will restart me."),process.exit(s))}function terminateAndSpawnChildProcess(e=0,s=0){process.on("exit",(function(){console.log("Process terminated\nStarting new process"),require("child_process").spawn(process.argv.shift(),process.argv,{cwd:process.cwd(),detached:!0,stdio:"inherit"})})),setTimeout((()=>{process.exit(e)}),s)}init();